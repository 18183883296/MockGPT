name: Build for release

on:
  push:
    paths:
      - ".github/workflows/Build for release.yml"
  pull_request:
    paths:
      - ".github/workflows/Build for release.yml"
  release:
    types: [published]
  schedule:
    - cron: "0 6 * * 1" # Every Monday 6 AM

jobs:
  FreeBSD-x86_64-static:
    runs-on: ubuntu-latest

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - name: Build in FreeBSD-vm
        id: build
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y crystal shards
          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            crystal version
            shards install
            crystal spec --order=random
            shards build --production --release --no-debug --static

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-freebsd-x86_64"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  Linux-arm64-gnu:
    runs-on: ubuntu-latest

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: aarch64
          distro: archarm_latest
          githubToken: ${{ github.token }}
          shell: /bin/bash
          install: |
            pacman -S crystal shards --noconfirm
          run: |
            pwd
            crystal version
            shards install
            crystal spec --order=random
            shards build --production --release --no-debug

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-linux-arm64-gnu"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  Linux-arm64-musl:
    runs-on: ubuntu-latest

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - uses: jirutka/setup-alpine@v1.2.0
        with:
          branch: edge
          arch: aarch64
          shell-name: alpine-aarch64.sh
          packages: >
            crystal
            shards

      - name: Build in Alpine
        id: build
        run: |
          pwd
          crystal version
          shards install
          crystal spec --order=random
          shards build --production --release --no-debug
        shell: alpine-aarch64.sh {0}

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-linux-arm64-musl"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  Linux-x86_64-static:
    runs-on: ubuntu-latest

    container:
      image: crystallang/crystal:latest-alpine

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - name: Build in container
        run: |
          crystal version
          shards install
          crystal spec --order=random
          shards build --production --release --no-debug --static

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-linux-x86_64"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  macOS-arm64:
    runs-on: macos-latest

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1.8.2
        with:
          crystal: latest

      - name: Build
        run: |
          crystal version
          shards install
          crystal spec --order=random
          shards build --production --release --no-debug

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-macos-arm64"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  macOS-x86_64:
    runs-on: macos-13

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1.8.2
        with:
          crystal: latest

      - name: Build
        run: |
          crystal version
          shards install
          crystal spec --order=random
          shards build --production --release --no-debug

      - name: Generate file name
        id: get_name
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d')
          fi
          FILE_NAME="mockgpt-$VERSION-macos-x86_64"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt .
          tar -cvzf ${{ steps.get_name.outputs.FILE_NAME }}.tgz mockgpt LICENSE README.md README_zh.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.tgz
          retention-days: 7

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'

  Windows-x86_64-static:
    runs-on: windows-latest

    steps:
      - name: Download source
        uses: actions/checkout@v4

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1.8.2
        with:
          crystal: latest

      - name: Build
        run: |
          crystal version
          shards install
          crystal spec --order=random
          shards build --production --release --no-debug --static

      - name: Generate file name
        id: get_name
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            $VERSION = $env:GITHUB_REF -replace "refs/tags/"
          } else {
            $VERSION = Get-Date -Format 'yyyyMMdd'
          }
          $FILE_NAME = "mockgpt-$VERSION-windows-x86_64-msvc"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "FILE_NAME=$FILE_NAME"
          Write-Host "Generated file name: $FILE_NAME"

      - name: Collect assets
        run: |
          mv bin/mockgpt.exe .
          $sourcePath = "mockgpt.exe", "LICENSE", "README.md", "README_zh.md"
          $destinationPath = "${{ steps.get_name.outputs.FILE_NAME }}.zip"
          Compress-Archive -CompressionLevel "Optimal" -Path $sourcePath -DestinationPath $destinationPath

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.get_name.outputs.FILE_NAME }}
          path: ${{ steps.get_name.outputs.FILE_NAME }}.zip
          retention-days: 7
          compression-level: 9

      - name: Output artifact id
        run: echo 'Artifact ID is ${{ steps.upload.outputs.artifact-id }}'
